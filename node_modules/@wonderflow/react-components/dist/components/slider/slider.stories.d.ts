import { ComponentMeta, ComponentStory } from '@storybook/react';
import React from 'react';
import { Slider } from './slider';
declare const story: ComponentMeta<typeof Slider>;
export default story;
export declare const Default: ComponentStory<React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onInput?: ((value: number) => void) | undefined;
    defaultValue?: number | undefined;
    showValues?: boolean | undefined;
    iconMin?: import("packages/symbols/dist").SymbolNames | React.ReactElement<HTMLOrSVGElement, string | React.JSXElementConstructor<any>> | undefined;
    iconMax?: import("packages/symbols/dist").SymbolNames | React.ReactElement<HTMLOrSVGElement, string | React.JSXElementConstructor<any>> | undefined;
    dimension?: "small" | "regular" | undefined;
    label?: string | undefined;
} & React.RefAttributes<HTMLInputElement>>>;
export declare const WithValues: ComponentStory<React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onInput?: ((value: number) => void) | undefined;
    defaultValue?: number | undefined;
    showValues?: boolean | undefined;
    iconMin?: import("packages/symbols/dist").SymbolNames | React.ReactElement<HTMLOrSVGElement, string | React.JSXElementConstructor<any>> | undefined;
    iconMax?: import("packages/symbols/dist").SymbolNames | React.ReactElement<HTMLOrSVGElement, string | React.JSXElementConstructor<any>> | undefined;
    dimension?: "small" | "regular" | undefined;
    label?: string | undefined;
} & React.RefAttributes<HTMLInputElement>>>;
export declare const WithIcons: ComponentStory<React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onInput?: ((value: number) => void) | undefined;
    defaultValue?: number | undefined;
    showValues?: boolean | undefined;
    iconMin?: import("packages/symbols/dist").SymbolNames | React.ReactElement<HTMLOrSVGElement, string | React.JSXElementConstructor<any>> | undefined;
    iconMax?: import("packages/symbols/dist").SymbolNames | React.ReactElement<HTMLOrSVGElement, string | React.JSXElementConstructor<any>> | undefined;
    dimension?: "small" | "regular" | undefined;
    label?: string | undefined;
} & React.RefAttributes<HTMLInputElement>>>;
export declare const WithLabel: ComponentStory<React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    min?: number | undefined;
    max?: number | undefined;
    step?: number | undefined;
    onInput?: ((value: number) => void) | undefined;
    defaultValue?: number | undefined;
    showValues?: boolean | undefined;
    iconMin?: import("packages/symbols/dist").SymbolNames | React.ReactElement<HTMLOrSVGElement, string | React.JSXElementConstructor<any>> | undefined;
    iconMax?: import("packages/symbols/dist").SymbolNames | React.ReactElement<HTMLOrSVGElement, string | React.JSXElementConstructor<any>> | undefined;
    dimension?: "small" | "regular" | undefined;
    label?: string | undefined;
} & React.RefAttributes<HTMLInputElement>>>;
//# sourceMappingURL=slider.stories.d.ts.map