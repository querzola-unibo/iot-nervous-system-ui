import type { TokensTypes } from '@wonderflow/tokens/platforms/web';
import { ReactNode } from 'react';
import { Polymorphic, StackProps } from '../..';
export declare type CardProps = Pick<StackProps, 'wrap' | 'columnGap' | 'rowGap' | 'vAlign' | 'hAlign'> & {
    /**
     * Set the padding on each side of the card.
     */
    padding?: false | TokensTypes['space'];
    /**
     * Content rendered inside the card on the left side, before children.
     */
    left?: ReactNode;
    /**
     * Content rendered inside the card on the right side, after children.
     */
    right?: ReactNode;
    /**
     * Add a border to the card to increase its visual weight and contrast.
     */
    bordered?: boolean;
    /**
     * Define the edge radius of the card.
     */
    radius?: false | TokensTypes['radius'];
    /**
     * Change the background color of the card.
     */
    dimmed?: 0 | 1 | 2;
    /**
     * Make the card vibrant. Add tranlucent background.
     */
    vibrant?: boolean;
    /**
     * Change the background color of the card when it is hovered.
     */
    highlightOnHover?: boolean;
};
declare type PolymorphicCard = Polymorphic.ForwardRefComponent<'div', CardProps>;
export declare const Card: PolymorphicCard;
export {};
//# sourceMappingURL=card.d.ts.map