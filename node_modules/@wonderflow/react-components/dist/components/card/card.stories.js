import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { Stack, Symbol, Text, Title, } from '../..';
import { Card } from './card';
const story = {
    title: 'Layouts/Card',
    component: Card,
    args: {
        bordered: false,
        vibrant: false,
        highlightOnHover: true,
        dimmed: 1,
    },
    argTypes: {
        children: {
            table: {
                disable: true,
            },
        },
    },
};
export default story;
const Template = args => _jsx(Card, { ...args });
export const Default = Template.bind({});
Default.args = {
    children: (_jsxs(_Fragment, { children: [_jsx(Title, { level: "3", children: "Card title" }), _jsx(Text, { children: "Lorem, ipsum dolor sit amet consectetur adipisicing elit." })] })),
};
export const Vibrant = Template.bind({});
Vibrant.args = {
    vibrant: true,
    children: (_jsxs(_Fragment, { children: [_jsx(Title, { level: "3", children: "Card title" }), _jsx(Text, { children: "Lorem, ipsum dolor sit amet consectetur adipisicing elit." })] })),
};
export const WithLeft = Template.bind({});
WithLeft.args = {
    left: _jsx(Symbol, { source: "bell", dimension: 32 }),
    children: (_jsxs(Stack, { children: [_jsx(Title, { level: "5", children: "Title" }), _jsx(Text, { children: "Lorem, ipsum dolor sit amet consectetur adipisicing elit." })] })),
};
export const WithRight = Template.bind({});
WithRight.args = {
    right: _jsx(Symbol, { source: "bell", dimension: 32 }),
    children: (_jsxs(Stack, { children: [_jsx(Title, { level: "5", children: "Title" }), _jsx(Text, { children: "Lorem, ipsum dolor sit amet consectetur adipisicing elit." })] })),
};
export const WithLeftAndRight = Template.bind({});
WithLeftAndRight.args = {
    left: _jsx(Symbol, { source: "bell", dimension: 32 }),
    children: (_jsxs(Stack, { children: [_jsx(Title, { level: "5", children: "Title" }), _jsx(Text, { children: "Lorem, ipsum dolor sit amet consectetur adipisicing elit." })] })),
    right: _jsx(Symbol, { source: "calendar", dimension: 32 }),
};
