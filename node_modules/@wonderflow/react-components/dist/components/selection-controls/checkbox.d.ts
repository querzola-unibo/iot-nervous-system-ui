import { ChangeEvent, InputHTMLAttributes } from 'react';
export declare type CheckboxProps = InputHTMLAttributes<HTMLInputElement> & {
    /**
     * Set disabled state. The component is not interactive and grayed out.
     */
    disabled?: boolean;
    /**
     * Set the indeterminate state. This state is used to indicate that the checkbox is partially checked.
     * Is used when a subset of the options are selected but not all of them.
     */
    indeterminate?: boolean;
    /**
     * Define the accessible label of the input. While this is not
     * mandatory, an input should always have a label. If not using this property
     * you can bind a custom label to the input by using an id.
     */
    label?: string;
    /**
     * Set the size of the toggle.
     */
    dimension?: 'regular' | 'small';
    /**
     * Callback function to be called when is toggled.
     * A parameter `ChangeEvent<HTMLInputElement>` is passed with the event details
     */
    onChange?: (event: ChangeEvent<HTMLInputElement>) => void;
};
export declare const Checkbox: import("react").ForwardRefExoticComponent<InputHTMLAttributes<HTMLInputElement> & {
    /**
     * Set disabled state. The component is not interactive and grayed out.
     */
    disabled?: boolean | undefined;
    /**
     * Set the indeterminate state. This state is used to indicate that the checkbox is partially checked.
     * Is used when a subset of the options are selected but not all of them.
     */
    indeterminate?: boolean | undefined;
    /**
     * Define the accessible label of the input. While this is not
     * mandatory, an input should always have a label. If not using this property
     * you can bind a custom label to the input by using an id.
     */
    label?: string | undefined;
    /**
     * Set the size of the toggle.
     */
    dimension?: "small" | "regular" | undefined;
    /**
     * Callback function to be called when is toggled.
     * A parameter `ChangeEvent<HTMLInputElement>` is passed with the event details
     */
    onChange?: ((event: ChangeEvent<HTMLInputElement>) => void) | undefined;
} & import("react").RefAttributes<HTMLInputElement>>;
//# sourceMappingURL=checkbox.d.ts.map