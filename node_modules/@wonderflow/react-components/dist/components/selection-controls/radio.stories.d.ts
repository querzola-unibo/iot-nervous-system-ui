import { ComponentMeta, ComponentStory } from '@storybook/react';
import React from 'react';
import { Radio } from './radio';
declare const story: ComponentMeta<typeof Radio>;
export default story;
export declare const Default: ComponentStory<React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    disabled?: boolean | undefined;
    label?: string | undefined;
    dimension?: "small" | "regular" | undefined;
    onChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
} & React.RefAttributes<HTMLInputElement>>>;
export declare const Checked: ComponentStory<React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    disabled?: boolean | undefined;
    label?: string | undefined;
    dimension?: "small" | "regular" | undefined;
    onChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
} & React.RefAttributes<HTMLInputElement>>>;
export declare const DisabledChecked: ComponentStory<React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    disabled?: boolean | undefined;
    label?: string | undefined;
    dimension?: "small" | "regular" | undefined;
    onChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
} & React.RefAttributes<HTMLInputElement>>>;
export declare const withLabel: ComponentStory<React.ForwardRefExoticComponent<React.InputHTMLAttributes<HTMLInputElement> & {
    disabled?: boolean | undefined;
    label?: string | undefined;
    dimension?: "small" | "regular" | undefined;
    onChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined;
} & React.RefAttributes<HTMLInputElement>>>;
//# sourceMappingURL=radio.stories.d.ts.map