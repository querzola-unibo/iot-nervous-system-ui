import { TokensTypes } from '@wonderflow/tokens/platforms/web';
import { Polymorphic } from '../..';
export declare type StackProps = {
    /**
     * Add a gap between rows.
     */
    rowGap?: TokensTypes['space'];
    /**
     * Add a gap between columns.
     */
    columnGap?: TokensTypes['space'];
    /**
     * Display the element as inline-flex
     */
    inline?: boolean;
    /**
     * Wrap children whene there is no space for them.
     */
    wrap?: boolean;
    /**
     * Make the children grow to fill the available space instead
     * of being sized based on their content.
     */
    fill?: boolean;
    /**
     * Set the vertical content placement instead of
     * growing to fill the available space.
     */
    vAlign?: string;
    /**
     * Set the horizontal content placement instead of
     * growing to fill the available space.
     */
    hAlign?: string;
    /**
     * Set the horizontal padding (left/right)
     */
    hPadding?: TokensTypes['space'];
    /**
     * Set the vertical padding (top/bottom)
     */
    vPadding?: TokensTypes['space'];
    /**
     * Renderes children as rows or columns. The value can be one of the flex directions.
     * More info: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-direction
     */
    direction?: 'row' | 'column' | 'row-reverse' | 'column-reverse';
    /**
     * Set a max width for the stack container.
     */
    maxWidth?: string;
};
declare type PolymorphicStack = Polymorphic.ForwardRefComponent<'div', StackProps>;
export declare const Stack: PolymorphicStack;
export {};
//# sourceMappingURL=stack.d.ts.map