import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/*
 * Copyright 2022 Wonderflow <authored by Mattia Astorino>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import clsx from 'clsx';
import { forwardRef } from 'react';
import { Symbol } from '../../..';
import * as styles from './table-cell.module.css';
export const TableCell = forwardRef(({ children, className, collapsed, isSorted, align = 'start', style, isSortedDesc, as: Wrapper = 'td', padding = true, width, ...otherProps }, forwardedRef) => {
    const isWidthString = typeof width === 'string';
    const computedWidthNumber = typeof width === 'number' ? `${width}px` : undefined;
    const dynamicStyle = {
        '--width': isWidthString ? width : computedWidthNumber,
        '--text-align': align,
    };
    return (_jsxs(Wrapper, { ref: forwardedRef, className: clsx(styles.TableCell, className), "data-table-cell-collapsed": collapsed, "data-table-cell-padding": padding, "data-table-cell-fixed": Boolean(width), style: {
            ...dynamicStyle,
            ...style,
            userSelect: Wrapper === 'td' ? undefined : 'none',
        }, ...otherProps, children: [children, isSorted && (_jsx(Symbol, { dimension: 12, className: styles.HeadCellIcon, fill: "var(--highlight-red-foreground)", source: isSortedDesc ? 'bars-sort-down' : 'bars-sort-up' }))] }));
});
