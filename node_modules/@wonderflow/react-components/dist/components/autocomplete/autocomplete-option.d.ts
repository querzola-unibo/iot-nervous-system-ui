import { PropsWithChildren } from 'react';
import { Except } from 'type-fest';
import { MenuItemProps } from '../..';
export declare type AutocompleteOptionProps = PropsWithChildren<PropsWithClass> & Except<MenuItemProps, 'padding' | 'autoFocus' | 'description' | 'onClick'> & {
    /**
     * Callback called when the option is clicked.
     * It passes the value and the inner text of the option as arguments.
     */
    onClick?: (value?: string, content?: string) => void;
    /**
     * Label of the option. This is the text that will be displayed in the option, which can be
     * different from the value.
     */
    children: string | string[];
};
export declare const AutocompleteOption: import("react").ForwardRefExoticComponent<Pick<AutocompleteOptionProps, string> & import("react").RefAttributes<HTMLButtonElement>>;
//# sourceMappingURL=autocomplete-option.d.ts.map