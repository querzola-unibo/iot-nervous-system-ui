import { TokensTypes } from '@wonderflow/tokens/platforms/web';
import { ReactNode } from 'react';
import { GridItemProps } from './item/grid-item';
export declare type GridProps = {
    /**
     * The children to be rendered in the grid.
     * Even though this component doesn't block you to use any elements as children,
     * it's recommended to use only `<Grid.Item>` component to generate the grid items.
     */
    children: ReactNode;
    /**
     * Specify how many columns the grid should have.
     */
    columns?: number;
    /**
     * Specify how many rows the grid should have.
     */
    rows?: number;
    /**
     * Add a gap between rows.
     */
    rowGap?: TokensTypes['space'];
    /**
     * Add a gap between columns.
     */
    columnGap?: TokensTypes['space'];
    /**
     * Set the columns repeating behaviour.
     * This refers to the CSS function `repeat()`, which can use both `auto-fit`
     * and `auto-fill` parameters.
     *
     * Read more: https://developer.mozilla.org/en-US/docs/Web/CSS/repeat
     */
    filling?: 'fit' | 'fill' | false;
    /**
     * Set the minimum columns width
     */
    colMinWidth?: string;
    /**
     * Set the minimum rows height
     */
    rowMinHeight?: string;
};
declare type GridComponent = React.ForwardRefExoticComponent<GridProps> & {
    Item: React.ForwardRefExoticComponent<GridItemProps>;
};
export declare const Grid: GridComponent;
export {};
//# sourceMappingURL=grid.d.ts.map