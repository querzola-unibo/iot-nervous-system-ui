import { ReactNode } from 'react';
export declare type OverlayContainerProps = {
    /**
     * The children to render inside the overlay container. This content
     * will be rendered in a React `portal`, which means that it will be
     * rendered outside of the DOM hierarchy of the parent component.
     */
    children: ReactNode;
    /**
     * Set the root element to render the overlay container into.
     */
    root?: HTMLElement;
    /**
     * Set the css `z-index` of the overlay container. This must be used only
     * if necessary.
     */
    index?: number;
    /**
     * Set the overlay style. This is used to obscure the content
     * behind the overlay if `obfuscate` is `true`. If set to `auto`, the overlay
     * color is determined by the global active theme (light or dark).
     */
    overlayColor?: 'light' | 'dark' | 'auto';
    /**
     * The callback function that is called when the overlay is closed.
     */
    onClose?: () => void;
    /**
     * Set the overlay to be obscuring the page content behind it.
     */
    obfuscate?: boolean;
};
export declare const OverlayContainer: FCChildren<OverlayContainerProps>;
//# sourceMappingURL=overlay-container.d.ts.map