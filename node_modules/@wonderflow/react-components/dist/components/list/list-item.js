import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
/*
 * Copyright 2022 Wonderflow <authored by Mattia Astorino>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import clsx from 'clsx';
import { forwardRef } from 'react';
import { Stack, Symbol, Text, } from '../..';
import * as styles from './list.module.css';
export const ListItem = forwardRef(({ className, hideMarker, marker = 'bullet', markerColor, children, dimension = 'regular', ...otherProps }, forwardedRef) => {
    const sizes = {
        small: {
            text: 16,
            icon: {
                size: 16,
                weight: 'solid',
            },
        },
        regular: {
            text: 18,
            icon: {
                size: 16,
                weight: 'solid',
            },
        },
        big: {
            text: 22,
            icon: {
                size: 18,
                weight: 'solid',
            },
        },
    };
    return (_jsxs(Stack, { className: clsx(styles.ListItem, className), as: "li", direction: "row", hAlign: "start", vAlign: "start", fill: false, ref: forwardedRef, ...otherProps, children: [!hideMarker && (_jsx(Symbol, { source: marker, className: styles.Marker, fill: markerColor, "data-list-default-marker": marker === 'bullet', weight: marker === 'bullet' ? 'solid' : sizes[dimension].icon.weight, dimension: marker !== 'bullet' ? sizes[dimension].icon.size : 16 })), _jsx(Text, { as: "span", size: sizes[dimension].text, children: children })] }));
});
