import { jsx as _jsx } from "react/jsx-runtime";
/*
 * Copyright 2022 Wonderflow <authored by Mattia Astorino>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import clsx from 'clsx';
import { useEffect, useState } from 'react';
import ReactPaginate from 'react-paginate';
import { Symbol } from '../..';
import * as styles from './pagination.module.css';
export const Pagination = ({ className, itemsCount, itemsPerPage = 10, onPageClick, pageCount, pageRangeDisplayed = 3, marginPagesDisplayed = 1, ...otherProps }) => {
    const [computedPageCount, setComputedPageCount] = useState(0);
    useEffect(() => {
        if (itemsCount)
            setComputedPageCount(Math.ceil(itemsCount / itemsPerPage));
    }, [itemsCount, itemsPerPage]);
    const handlePageClick = (event) => {
        const newOffset = (event.selected * itemsPerPage) % itemsCount;
        onPageClick?.({ ...event, offset: newOffset });
    };
    return (_jsx(ReactPaginate, { containerClassName: clsx(styles.Pagination, className), breakLabel: "...", nextLabel: _jsx(Symbol, { dimension: 16, source: "chevron-right" }), previousLabel: _jsx(Symbol, { dimension: 16, source: "chevron-left" }), onPageChange: handlePageClick, pageRangeDisplayed: pageRangeDisplayed, pageCount: pageCount ?? computedPageCount, marginPagesDisplayed: marginPagesDisplayed, ...otherProps }));
};
