import * as TabsPrimitive from '@radix-ui/react-tabs';
import { PropsWithChildren } from 'react';
import { TabPanelProps } from './tabs-panel';
export declare type TabProps = PropsWithChildren<PropsWithClass> & {
    /**
     * The value for the selected tab, if controlled
     */
    value?: TabsPrimitive.TabsProps['value'];
    /**
     * The value of the tab to select by default, if uncontrolled
     */
    defaultValue?: TabsPrimitive.TabsProps['defaultValue'];
    /**
     * A function called when a new tab is selected
     */
    onValueChange?: TabsPrimitive.TabsProps['onValueChange'];
    /**
     * The direction of navigation between toolbar items.
     * @default ltr
     */
    dir?: TabsPrimitive.TabsProps['dir'];
    /**
     * When `automatic`, tabs are activated when receiving focus.
     * When `manual`, tabs are activated when clicked.
     */
    activationMode?: TabsPrimitive.TabsProps['activationMode'];
    /**
     * When true, keyboard navigation will loop from last tab to first, and vice versa.
     * @default true
     */
    loop?: TabsPrimitive.TabsListProps['loop'];
    /**
     * Set the tabs sizes
     *
     * @default "regular"
     */
    dimension?: 'regular' | 'big';
};
export declare const Tab: {
    ({ className, children, onValueChange, defaultValue, value, loop, dimension, ...otherProps }: TabProps): JSX.Element;
    Panel: FCChildrenClass<TabPanelProps>;
};
//# sourceMappingURL=tab.d.ts.map