import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { Button } from '../..';
import { Tab } from './tab';
const story = {
    title: 'Navigation/Tab',
    component: Tab,
    args: {
        defaultValue: '1',
        dimension: 'regular',
    },
};
export default story;
const Template = args => (_jsxs(Tab, { ...args, children: [_jsx(Tab.Panel, { value: "1", label: "Tab 1", children: "Panel 1" }), _jsx(Tab.Panel, { value: "2", label: "Tab mid long 2", children: "Panel 2" }), _jsx(Tab.Panel, { value: "3", label: "Tab short 3", children: "Panel 3" }), _jsx(Tab.Panel, { value: "4", label: "Tab veryy long 4", children: "Panel 4" }), _jsx(Tab.Panel, { value: "5", label: "Tab 5", children: "Panel 5" }), _jsx(Tab.Panel, { value: "6", label: "Tab 6", children: "Panel 6" })] }));
export const Default = Template.bind({});
export const InitialTab = Template.bind({});
InitialTab.args = {
    defaultValue: '3',
};
// export const ProgrammaticTab = () => {
//   const [state, setState] = useState('1');
//   return (
//     <Tab value={state} onValueChange={val => setState(val)}>
//       <Tab.Panel value="1" label="Tab 1">
//         Tab panel 1
//         <Button icon="sun-bright" onClick={() => setState('3')}>Go to tab 3</Button>
//       </Tab.Panel>
//       <Tab.Panel value="2" label="Tab 2">
//         Tab panel 2
//       </Tab.Panel>
//       <Tab.Panel value="3" label="Tab 3">
//         Tab panel 3
//       </Tab.Panel>
//     </Tab>
//   );
// };
export const ChangeEvent = Template.bind({});
ChangeEvent.args = {
    onValueChange: current => alert(`current is ${current}`),
};
export const ConditionalTab = () => {
    const [isVisible, setIsVisible] = useState(false);
    return (_jsxs(Tab, { defaultValue: "1", children: [_jsx(Tab.Panel, { value: "1", label: "Tab 1", children: "Tab panel 1" }), _jsx(Tab.Panel, { value: "2", label: "Tab 2", children: _jsx(Button, { icon: "sun-bright", onClick: () => setIsVisible(!isVisible), children: "Toggle new tab" }) }), isVisible && _jsx(Tab.Panel, { value: "3", label: "Tab 3", children: "Tab panel 3" })] }));
};
export const DisabledTab = args => (_jsxs(Tab, { defaultValue: "1", ...args, children: [_jsx(Tab.Panel, { value: "1", label: "Tab 1", children: "Panel 1" }), _jsx(Tab.Panel, { value: "2", label: "Tab mid long 2", children: "Panel 2" }), _jsx(Tab.Panel, { value: "3", label: "Tab short 3", children: "Panel 3" }), _jsx(Tab.Panel, { disabled: true, value: "4", label: "Tab veryy long 4", children: "Panel 4" }), _jsx(Tab.Panel, { value: "5", label: "Tab 5", children: "Panel 5" }), _jsx(Tab.Panel, { value: "6", label: "Tab 6", children: "Panel 6" })] }));
export const WithIcons = args => (_jsxs(Tab, { defaultValue: "1", ...args, children: [_jsx(Tab.Panel, { icon: "star", value: "1", label: "Tab 1", children: "Panel 1" }), _jsx(Tab.Panel, { icon: "eye", value: "2", label: "Tab mid long 2", children: "Panel 2" }), _jsx(Tab.Panel, { icon: "sun-bright", value: "3", label: "Tab short 3", children: "Panel 3" }), _jsx(Tab.Panel, { icon: "moon", disabled: true, value: "4", label: "Tab veryy long 4", children: "Panel 4" }), _jsx(Tab.Panel, { icon: "magnifying-glass", value: "5", label: "Tab 5", children: "Panel 5" }), _jsx(Tab.Panel, { icon: "check", value: "6", label: "Tab 6", children: "Panel 6" })] }));
